# Sveltest Testing Documentation

> Comprehensive vitest-browser-svelte testing patterns for modern Svelte 5 applications. Real-world examples demonstrating client-server alignment, component testing in actual browsers, SSR validation, and migration from @testing-library/svelte.

## Core Testing Documentation

- **[Getting Started](./getting-started.md)** - Essential setup guide for vitest-browser-svelte with Svelte 5. Learn the Foundation First approach, Client-Server Alignment Strategy, and write your first browser-based component tests.

- **[Testing Patterns](./testing-patterns.md)** - Specific, actionable testing patterns for common Svelte scenarios. Covers locator usage, component testing, Svelte 5 runes, form validation, and integration testing with real examples.

- **[Best Practices](./best-practices.md)** - Strategic testing approaches including the Foundation First methodology and Client-Server Alignment Strategy. Learn to avoid brittle tests, test user value over implementation details, and handle Svelte 5 runes properly.

- **[API Reference](./api-reference.md)** - Complete reference for vitest-browser-svelte APIs. Covers locators, assertions, component rendering, Svelte 5 runes testing, SSR patterns, and critical anti-patterns to avoid.

- **[Migration Guide](./migration-guide.md)** - Comprehensive step-by-step guide for migrating from @testing-library/svelte to vitest-browser-svelte. Includes phase-by-phase approach, pattern transformations, and common pitfall solutions.

## Additional Resources

- **[E2E Testing](./e2e-testing.md)** - End-to-end testing patterns that complete the Client-Server Alignment Strategy by validating full user journeys from browser to server and back.

- **[CI/CD](./ci-cd.md)** - Production-ready testing pipelines with Playwright containers, automatic version synchronization, optimized caching, and workflow separation for reliable automation.

- **[Troubleshooting](./troubleshooting.md)** - Solutions for common issues including client-server mismatches, element not found errors, test hangs, browser environment problems, and performance issues.

- **[About](./about.md)** - Learn about Sveltest's evolution from weekend project to production-tested patterns, its community-driven development approach, and how to contribute to the growing ecosystem.

## Available LLM Documentation Formats

The Sveltest documentation is optimized for AI assistants and available in multiple specialized formats:

- **Comprehensive Rules** - Complete testing methodology with examples for AI assistants
- **Quick Reference Cards** - Condensed pattern summaries for rapid AI consultation  
- **Pattern Libraries** - Focused collections of specific testing scenarios
- **Migration Helpers** - Step-by-step transformation guides for automated assistance
- **Best Practice Enforcement** - Rules for maintaining code quality and consistency

These formats ensure AI assistants can provide accurate, context-aware guidance for modern Svelte testing workflows, helping teams maintain consistent patterns and avoid common pitfalls.

---

*Cross-reference: All documentation supports the [Client-Server Alignment Strategy](./best-practices.md#client-server-alignment-strategy) and [Foundation First approach](./best-practices.md#foundation-first-approach) for reliable, maintainable testing.*